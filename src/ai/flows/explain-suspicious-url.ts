// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Explains what is suspicious about a URL or message.
 *
 * - explainSuspiciousUrl - A function that handles the explanation of why a URL or message is suspicious.
 * - ExplainSuspiciousUrlInput - The input type for the explainSuspiciousUrl function.
 * - ExplainSuspiciousUrlOutput - The return type for the explainSuspiciousUrl function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ExplainSuspiciousUrlInputSchema = z.object({
  urlOrMessage: z.string().describe('The URL or message to analyze.'),
  isPhishing: z.boolean().describe('Whether the URL or message is flagged as phishing.'),
  safeBrowsingResult: z.string().optional().describe('The result from the Safe Browsing API, if available.'),
});
export type ExplainSuspiciousUrlInput = z.infer<typeof ExplainSuspiciousUrlInputSchema>;

const ExplainSuspiciousUrlOutputSchema = z.object({
  explanation: z.string().describe('The explanation of why the URL or message is suspicious.'),
});
export type ExplainSuspiciousUrlOutput = z.infer<typeof ExplainSuspiciousUrlOutputSchema>;

export async function explainSuspiciousUrl(input: ExplainSuspiciousUrlInput): Promise<ExplainSuspiciousUrlOutput> {
  return explainSuspiciousUrlFlow(input);
}

const prompt = ai.definePrompt({
  name: 'explainSuspiciousUrlPrompt',
  input: {schema: ExplainSuspiciousUrlInputSchema},
  output: {schema: ExplainSuspiciousUrlOutputSchema},
  prompt: `You are an AI expert in identifying and explaining phishing attempts.

You are given a URL or message that has been flagged as potentially suspicious. Your task is to explain what aspects of the URL or message raise suspicion.

{% if isPhishing %}
The URL or message has been flagged as phishing.
{% endif %}

{% if safeBrowsingResult %}
The Safe Browsing API returned the following result: {{{safeBrowsingResult}}}
{% endif %}

Analyze the following URL or message and provide a detailed explanation of the potential risks and suspicious elements:

{{urlOrMessage}}`,
});

const explainSuspiciousUrlFlow = ai.defineFlow(
  {
    name: 'explainSuspiciousUrlFlow',
    inputSchema: ExplainSuspiciousUrlInputSchema,
    outputSchema: ExplainSuspiciousUrlOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
